buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/javax.mail/javax.mail-api
    //compile group: 'javax.mail', name: 'javax.mail-api', version: '1.6.2'
    //compile files('src/main/resources/javax.mail.jar')
    //compile group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.postgresql:postgresql'
	
	compile('org.springframework.boot:spring-boot-starter-mail')
	
	
  	testCompile 'junit:junit:4.12'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
	compile('org.springframework.boot:spring-boot-starter-web')


	//Dependencies for jUnit5 and Mockito 2+
 	//testImplementation "junit:junit:4.12"
  	//testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.1')
    //testImplementation('org.mockito:mockito-core:2.+')
  	//testImplementation('org.mockito:mockito-junit-jupiter:2.18.3')
  	//dependency to run the project from Eclipse
  	//testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: "1.3.1"
}

sourceSets {
  main {
    java { srcDir 'src/main/java' }
  }
  test {
    java { srcDir 'src/test/java'}
  }
}

task compile(type: JavaCompile) {
  classpath = sourceSets.main.compileClasspath
  classpath += sourceSets.test.runtimeClasspath
  sourceSets.test.java.outputDir = file('build/bin')
  sourceSets.main.java.outputDir = file('build/bin')
}
mainClassName='ca.mcgill.ecse321.cooperator.CooperatorApplication'

jar {
  destinationDir=file('distributable')
  manifest {
    // It is smart to reuse the name of the main class variable instead of hardcoding it
    attributes "Main-Class": "$mainClassName"
  }
  
}

